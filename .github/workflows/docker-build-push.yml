name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/aisuckhoe-webchat
  CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
  POSTGRESQL_URL: ${{ secrets.POSTGRESQL_URL }}
  FIREBASE_ADMIN_CERT_PATH: ${{ secrets.FIREBASE_ADMIN_CERT_PATH }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ vars.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Generate build args
        id: build-args
        run: |
          args=""
          while IFS='=' read -r key value; do
            if [[ "$key" == BUILD_* ]]; then
              args="$args\n$key=$value"
            fi
          done < <(env)
          echo "build_args<<EOF" >> $GITHUB_OUTPUT
          echo -e "$args" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ steps.build-args.outputs.build_args }}